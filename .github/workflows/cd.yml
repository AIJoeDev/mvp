name: cd
on:
  push:
    branches:
      # - main
      # - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies 👨🏻‍💻
        run: yarn
      - name: Run tests 🧪
        run: yarn test
      - name: Upload build
          uses: actions/upload-artifact@master
          with:
            name: build
            path: dist

  deploy: 
    runs-on: ${{ matrix.os }}
    needs: [tests]
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ matrix.node }}
      - name: Download build
        uses: actions/download-artifact@master
        with:
          name: build
          path: dist
      - name: Deploy project to firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --non-interactive
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}