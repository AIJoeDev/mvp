# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Preview on PR
on: 
  pull_request:
    branches:
      - master
  # Optionally configure to run only for specific files. For example:
  # paths:
  # - "website/**"

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies 👨🏻‍💻
        run: yarn
      - name: Build & Run tests 🧪
        run: yarn ci
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mvp
          path: nuxt-dist
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn` 

  deploy_preview:
    needs: ci
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        # Add any build steps here. For example:
        # - run: npm ci && npm run build
      - name: Download Artifact
        uses: actions/download-artifact@v2
          name: mvp
      - name: Display structure of downloaded files
        run: ls -R
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXERCISE_HEALTH }}'
          channelId: preprod
          projectId: exercise-health
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
